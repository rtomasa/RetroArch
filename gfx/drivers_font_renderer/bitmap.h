/*  RetroArch - A frontend for libretro.
 *  Copyright (C) 2010-2014 - Hans-Kristian Arntzen
 *  Copyright (C) 2011-2017 - Daniel De Matteis
 *
 *  RetroArch is free software: you can redistribute it and/or modify it under the terms
 *  of the GNU General Public License as published by the Free Software Found-
 *  ation, either version 3 of the License, or (at your option) any later version.
 *
 *  RetroArch is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 *  PURPOSE.  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with RetroArch.
 *  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __RARCH_FONT_BITMAP_H
#define __RARCH_FONT_BITMAP_H

#include <stdint.h>

#define SYMBOL_WIDTH 5
#define FONT_WIDTH 6
#define FONT_HEIGHT 10
/* FONT_HEIGHT_BASELINE_OFFSET:
 * Distance in pixels from top of character
 * to baseline */
#define FONT_HEIGHT_BASELINE_OFFSET 8
#define FONT_WIDTH_STRIDE (FONT_WIDTH + 1)
#define FONT_HEIGHT_STRIDE (FONT_HEIGHT + 1)

#define FONT_OFFSET(x) ((x) * ((FONT_HEIGHT * FONT_WIDTH + 7) / 8))

static const unsigned char bitmap_bin[] =
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x80, 0x61, 0x18, 0x02, 0x30, 0x00, 0x00,  
0xB6, 0x4D, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x20, 0xFD, 0x92, 0xF4, 0x4B, 0x00, 0x00,  
0x00, 0x80, 0xF8, 0x89, 0x87, 0x7E, 0x00, 0x00,  
0x00, 0x20, 0x56, 0x0A, 0xA5, 0x46, 0x00, 0x00,  
0x00, 0xE0, 0x28, 0xC4, 0x32, 0xB9, 0x00, 0x00,  
0x0C, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0xC0, 0x18, 0x86, 0x61, 0x30, 0x00, 0x00,  
0x00, 0x60, 0x30, 0x0C, 0xC3, 0x18, 0x00, 0x00,  
0x00, 0x51, 0x39, 0x84, 0x53, 0x01, 0x00, 0x00,  
0x00, 0xC0, 0x30, 0x3F, 0xC3, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0xC0, 0x18, 0x00, 0x00,  
0x00, 0x00, 0x3C, 0x0F, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0xC0, 0x30, 0x00, 0x00,  
0x00, 0x00, 0x63, 0x8C, 0x31, 0x04, 0x00, 0x00,  
0x00, 0xE0, 0xCD, 0xF3, 0x3C, 0x7B, 0x00, 0x00,  
0x00, 0xC0, 0x38, 0x0C, 0xC3, 0x78, 0x00, 0x00,  
0x00, 0xE0, 0xCD, 0x33, 0x66, 0xFC, 0x00, 0x00,  
0x00, 0xE0, 0xCD, 0x18, 0x3C, 0x7B, 0x00, 0x00,  
0x00, 0x80, 0x71, 0x5A, 0xF6, 0x63, 0x00, 0x00,  
0x00, 0xF0, 0x05, 0x1F, 0x3C, 0x7B, 0x00, 0x00,  
0x00, 0xE0, 0x0D, 0xDF, 0x3C, 0x7B, 0x00, 0x00,  
0x00, 0xF0, 0xCF, 0x08, 0xC3, 0x30, 0x00, 0x00,  
0x00, 0xE0, 0xCD, 0xDE, 0x3C, 0x7B, 0x00, 0x00,  
0x00, 0xE0, 0xCD, 0xB3, 0x0F, 0x7B, 0x00, 0x00,  
0x00, 0xC0, 0x30, 0x00, 0xC3, 0x00, 0x00, 0x00,  
0x00, 0xC0, 0x30, 0x00, 0x63, 0x08, 0x00, 0x00,  
0x00, 0xC0, 0x18, 0x83, 0xC1, 0x00, 0x00, 0x00,  
0x00, 0xF0, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00,  
0x00, 0x60, 0x30, 0x18, 0x63, 0x00, 0x00, 0x00,  
0x00, 0xE0, 0xC5, 0x30, 0x07, 0x30, 0x00, 0x00,  
0x00, 0xC0, 0x89, 0x7D, 0x17, 0x78, 0x00, 0x00,  
0x00, 0xE0, 0x8D, 0xE3, 0x3F, 0x8E, 0x00, 0x00,  
0x00, 0xF0, 0x8D, 0xDF, 0x38, 0x7E, 0x00, 0x00,  
0x00, 0xE0, 0xCD, 0xC3, 0x30, 0x7B, 0x00, 0x00,  
0x00, 0xF0, 0x8D, 0xE3, 0x38, 0x7E, 0x00, 0x00,  
0x00, 0xF0, 0x0F, 0xDF, 0x30, 0xFC, 0x00, 0x00,  
0x00, 0xF0, 0x0F, 0xD3, 0x37, 0x0D, 0x00, 0x00,  
0x00, 0xE0, 0x8D, 0xC3, 0x3E, 0x7A, 0x00, 0x00,  
0x00, 0x30, 0x8E, 0xFF, 0x38, 0x8E, 0x00, 0x00,  
0x00, 0xE0, 0x31, 0x0C, 0xC3, 0x78, 0x00, 0x00,  
0x00, 0xC0, 0x63, 0x18, 0x96, 0x39, 0x00, 0x00,  
0x00, 0x30, 0x4E, 0xCF, 0x32, 0x8D, 0x00, 0x00,  
0x00, 0x30, 0x0C, 0xC3, 0x30, 0xFE, 0x00, 0x00,  
0x00, 0x30, 0xDE, 0xEB, 0x38, 0x8E, 0x00, 0x00,  
0x00, 0x30, 0x9E, 0xEB, 0x3C, 0x8E, 0x00, 0x00,  
0x00, 0xE0, 0x8D, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x00, 0xF0, 0x8D, 0xE3, 0x37, 0x0C, 0x00, 0x00,  
0x00, 0xE0, 0x8D, 0xE3, 0x3A, 0xFB, 0x00, 0x00,  
0x00, 0xF0, 0x8D, 0xE3, 0x37, 0x8D, 0x00, 0x00,  
0x00, 0xE0, 0x8D, 0x0E, 0x34, 0x7A, 0x00, 0x00,  
0x00, 0xF0, 0x33, 0x0C, 0xC3, 0x30, 0x00, 0x00,  
0x00, 0x30, 0x8E, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x00, 0x30, 0x8E, 0xE3, 0x68, 0x31, 0x00, 0x00,  
0x00, 0x30, 0xAE, 0xEB, 0xBA, 0x5A, 0x00, 0x00,  
0x00, 0x70, 0x5A, 0x0E, 0xA7, 0xE5, 0x00, 0x00,  
0x00, 0x30, 0x8E, 0x16, 0xC3, 0x30, 0x00, 0x00,  
0x00, 0xF0, 0x43, 0x0E, 0x27, 0xFC, 0x00, 0x00,  
0x00, 0xE0, 0x18, 0x86, 0x61, 0x38, 0x00, 0x00,  
0x00, 0x30, 0x18, 0x0C, 0x06, 0x83, 0x00, 0x00,  
0x00, 0xE0, 0x30, 0x0C, 0xC3, 0x38, 0x00, 0x00,  
0x00, 0xA1, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x3F, 0x00,  
0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x78, 0xB0, 0x1F, 0xFB, 0x00, 0x00,  
0x00, 0x30, 0x0C, 0xDF, 0x38, 0x7E, 0x00, 0x00,  
0x00, 0x00, 0x78, 0xE3, 0x30, 0x7A, 0x00, 0x00,  
0x00, 0x00, 0xC3, 0x7E, 0x1C, 0xFB, 0x00, 0x00,  
0x00, 0x00, 0x78, 0xE3, 0x3F, 0xF8, 0x00, 0x00,  
0x00, 0xC0, 0x31, 0x3F, 0xC3, 0x30, 0x00, 0x00,  
0x00, 0x00, 0x78, 0xB1, 0x0F, 0x7F, 0x00, 0x00,  
0x00, 0x30, 0x0C, 0xDF, 0x38, 0x8E, 0x00, 0x00,  
0x00, 0x00, 0x30, 0x00, 0xC3, 0x30, 0x00, 0x00,  
0x00, 0x80, 0x01, 0x18, 0x96, 0x39, 0x00, 0x00,  
0x00, 0x30, 0x8C, 0xD3, 0x33, 0x8D, 0x00, 0x00,  
0x00, 0xE0, 0x30, 0x0C, 0xC3, 0x30, 0x00, 0x00,  
0x00, 0x00, 0x7C, 0xEB, 0xBA, 0xAE, 0x00, 0x00,  
0x00, 0x00, 0x7C, 0xE3, 0x38, 0x8E, 0x00, 0x00,  
0x00, 0x00, 0x78, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x00, 0x00, 0x7C, 0xE3, 0xF8, 0x0D, 0x00, 0x00,  
0x00, 0x00, 0xF8, 0x71, 0xEC, 0xC3, 0x00, 0x00,  
0x00, 0x00, 0x7C, 0xE3, 0x30, 0x0C, 0x00, 0x00,  
0x00, 0x00, 0xF8, 0x83, 0x07, 0x7F, 0x00, 0x00,  
0x00, 0x60, 0x7C, 0x86, 0x61, 0x72, 0x00, 0x00,  
0x00, 0x00, 0x64, 0x59, 0x96, 0x79, 0x00, 0x00,  
0x00, 0x00, 0x8C, 0xE3, 0x68, 0x31, 0x00, 0x00,  
0x00, 0x00, 0xAC, 0xEB, 0xFA, 0x5B, 0x00, 0x00,  
0x00, 0x00, 0x9C, 0x1E, 0xE3, 0xE5, 0x00, 0x00,  
0x00, 0x00, 0xC4, 0xB1, 0x0F, 0x7F, 0x00, 0x00,  
0x00, 0x00, 0xFC, 0x10, 0x23, 0xFC, 0x00, 0x00,  
0x00, 0xC0, 0x31, 0x8E, 0xC3, 0x70, 0x00, 0x00,  
0x00, 0xC0, 0x30, 0x0C, 0xC3, 0x30, 0x00, 0x00,  
0x00, 0x70, 0x18, 0x8E, 0x63, 0x1C, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x4A, 0x01, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x5F, 0x14, 0x45, 0x51, 0x14, 0x45, 0xD1, 0x07,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x00,  
0x18, 0x41, 0x38, 0x04, 0x41, 0x10, 0x84, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x0A, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00,  
0x04, 0xF1, 0x11, 0x04, 0x41, 0x10, 0x04, 0x00,  
0x04, 0xF1, 0x11, 0x1F, 0x41, 0x10, 0x04, 0x00,  
0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0xC0, 0x34, 0x21, 0x84, 0x50, 0x55, 0x00, 0x00,  
0x0A, 0x01, 0x78, 0xC1, 0x07, 0x3D, 0x00, 0x00,  
0x00, 0x00, 0x20, 0x84, 0x40, 0x20, 0x00, 0x00,  
0x80, 0x56, 0x14, 0x4D, 0x51, 0x68, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x0A, 0x01, 0x7C, 0x08, 0x21, 0x7C, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x04, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x08, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x8A, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x14, 0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x0C, 0x03, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x7C, 0x9A, 0xA6, 0x01, 0x00, 0x00,  
0x0A, 0x01, 0x78, 0x81, 0x03, 0x3D, 0x00, 0x00,  
0x00, 0x00, 0x10, 0x08, 0x84, 0x10, 0x00, 0x00,  
0x00, 0x00, 0x68, 0x45, 0x53, 0x68, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x0A, 0x01, 0x7C, 0x08, 0x21, 0x7C, 0x00, 0x00,  
0x0A, 0x10, 0x45, 0x91, 0x43, 0x10, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x10, 0x00, 0x41, 0x10, 0x04, 0x01,  
0x00, 0x80, 0x70, 0x8A, 0xC2, 0x21, 0x00, 0x00,  
0x18, 0x41, 0x78, 0x84, 0x10, 0x7C, 0x00, 0x00,  
0x00, 0x10, 0x39, 0x8A, 0x13, 0x01, 0x00, 0x00,  
0x40, 0x14, 0x39, 0xC4, 0x47, 0x10, 0x00, 0x00,  
0x04, 0x41, 0x10, 0x00, 0x41, 0x10, 0x04, 0x00,  
0x18, 0x41, 0x38, 0x51, 0xE4, 0x10, 0xC4, 0x00,  
0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x80, 0x13, 0x5D, 0xD3, 0x15, 0x39, 0x00, 0x00,  
0x04, 0xC2, 0x28, 0x0C, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x50, 0x4A, 0xA1, 0x50, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x1E, 0x04, 0x41, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x80, 0x13, 0x55, 0xD3, 0x14, 0x39, 0x00, 0x00,  
0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0xE1, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x40, 0x10, 0x1F, 0x41, 0x7C, 0x00, 0x00,  
0x06, 0x42, 0x08, 0x0E, 0x00, 0x00, 0x00, 0x00,  
0x06, 0x62, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00,  
0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x24, 0x49, 0x92, 0x5C, 0x41, 0x00,  
0x80, 0x77, 0x5D, 0x16, 0x45, 0x51, 0x14, 0x05,  
0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x08, 0x01,  
0x84, 0x41, 0x10, 0x0E, 0x00, 0x00, 0x00, 0x00,  
0x84, 0xA2, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x14, 0x0A, 0xA5, 0x14, 0x00, 0x00,  
0x50, 0x14, 0x25, 0x94, 0xD6, 0x45, 0x01, 0x00,  
0x50, 0x94, 0x14, 0x5A, 0x94, 0x64, 0x01, 0x00,  
0x91, 0x34, 0x29, 0x95, 0xD6, 0x45, 0x01, 0x00,  
0x00, 0x00, 0x10, 0x00, 0x21, 0x04, 0x91, 0x03,  
0x02, 0xE1, 0x8D, 0xE3, 0x3F, 0x8E, 0x00, 0x00,  
0x10, 0xE2, 0x8D, 0xE3, 0x3F, 0x8E, 0x00, 0x00,  
0x8C, 0xE4, 0x8D, 0xE3, 0x3F, 0x8E, 0x00, 0x00,  
0x94, 0xE2, 0x8D, 0xE3, 0x3F, 0x8E, 0x00, 0x00,  
0x12, 0xE0, 0x8D, 0xE3, 0x3F, 0x8E, 0x00, 0x00,  
0x84, 0x43, 0x10, 0x8E, 0x13, 0x45, 0x00, 0x00,  
0x80, 0x67, 0x18, 0x4E, 0x51, 0x74, 0x00, 0x00,  
0x00, 0xE0, 0xCD, 0xC3, 0x30, 0x7B, 0x08, 0x03,  
0x02, 0xF1, 0x0F, 0xDF, 0x30, 0xFC, 0x00, 0x00,  
0x10, 0xF2, 0x0F, 0xDF, 0x30, 0xFC, 0x00, 0x00,  
0x8C, 0xF4, 0x0F, 0xDF, 0x30, 0xFC, 0x00, 0x00,  
0x12, 0xF0, 0x0F, 0xDF, 0x30, 0xFC, 0x00, 0x00,  
0x02, 0xE1, 0x31, 0x0C, 0xC3, 0x78, 0x00, 0x00,  
0x10, 0xE2, 0x31, 0x0C, 0xC3, 0x78, 0x00, 0x00,  
0x8C, 0xE4, 0x31, 0x0C, 0xC3, 0x78, 0x00, 0x00,  
0x12, 0xE0, 0x31, 0x0C, 0xC3, 0x78, 0x00, 0x00,  
0x80, 0xA1, 0x48, 0x97, 0xA4, 0x18, 0x00, 0x00,  
0x94, 0x32, 0x9E, 0xEB, 0x3C, 0x8E, 0x00, 0x00,  
0x02, 0xE1, 0x8D, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x10, 0xE2, 0x8D, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x8C, 0xE4, 0x8D, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x94, 0xE2, 0x8D, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x12, 0xE0, 0x8D, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x00, 0x10, 0x29, 0x84, 0x12, 0x01, 0x00, 0x00,  
0x80, 0x13, 0x65, 0xD5, 0x14, 0x39, 0x00, 0x00,  
0x02, 0x31, 0x8E, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x08, 0x31, 0x8E, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x8C, 0x34, 0x8E, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x12, 0x30, 0x8E, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x08, 0x11, 0x45, 0x91, 0x43, 0x10, 0x00, 0x00,  
0x80, 0x20, 0x38, 0x92, 0xE4, 0x08, 0x02, 0x00,  
0x00, 0x00, 0x7C, 0xE3, 0x34, 0x8E, 0x1B, 0x00,  
0x80, 0x40, 0x78, 0xB0, 0x1F, 0xFB, 0x00, 0x00,  
0x00, 0x84, 0x78, 0xB0, 0x1F, 0xFB, 0x00, 0x00,  
0x00, 0x23, 0x79, 0xB0, 0x1F, 0xFB, 0x00, 0x00,  
0x00, 0xA5, 0x78, 0xB0, 0x1F, 0xFB, 0x00, 0x00,  
0x80, 0x04, 0x78, 0xB0, 0x1F, 0xFB, 0x00, 0x00,  
0x84, 0x43, 0x38, 0x90, 0x17, 0x79, 0x00, 0x00,  
0x00, 0x00, 0x28, 0x94, 0x53, 0x68, 0x00, 0x00,  
0x00, 0x00, 0x78, 0xE3, 0x30, 0x7A, 0x08, 0x03,  
0x80, 0x40, 0x78, 0xE3, 0x3F, 0xF8, 0x00, 0x00,  
0x00, 0x84, 0x78, 0xE3, 0x3F, 0xF8, 0x00, 0x00,  
0x00, 0x23, 0x79, 0xE3, 0x3F, 0xF8, 0x00, 0x00,  
0x80, 0x02, 0x38, 0xD1, 0x17, 0x78, 0x00, 0x00,  
0x02, 0x01, 0x18, 0x04, 0x41, 0x10, 0x00, 0x00,  
0x00, 0x80, 0x10, 0x00, 0xC3, 0x30, 0x00, 0x00,  
0x00, 0xC0, 0x48, 0x00, 0xC3, 0x30, 0x00, 0x00,  
0x80, 0x02, 0x18, 0x04, 0x41, 0x10, 0x00, 0x00,  
0x80, 0x85, 0x40, 0x5E, 0x14, 0x39, 0x00, 0x00,  
0x00, 0xA5, 0x7C, 0xE3, 0x38, 0x8E, 0x00, 0x00,  
0x80, 0x40, 0x78, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x00, 0x84, 0x78, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x00, 0x23, 0x79, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x00, 0xA5, 0x78, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x80, 0x04, 0x78, 0xE3, 0x38, 0x7A, 0x00, 0x00,  
0x00, 0x40, 0x00, 0x1F, 0x40, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x38, 0x59, 0x35, 0x39, 0x00, 0x00,  
0x80, 0x40, 0x64, 0x59, 0x96, 0x79, 0x00, 0x00,  
0x00, 0x42, 0x64, 0x59, 0x96, 0x79, 0x00, 0x00,  
0x80, 0x91, 0x64, 0x59, 0x96, 0x79, 0x00, 0x00,  
0x40, 0x02, 0x64, 0x59, 0x96, 0x79, 0x00, 0x00,  
0x08, 0x01, 0x44, 0x51, 0x14, 0x79, 0x90, 0x03,  
0x40, 0x10, 0x3C, 0x51, 0x14, 0x3D, 0x41, 0x00,  
0x80, 0x02, 0x44, 0x51, 0x14, 0x79, 0x90, 0x03,  

};

typedef struct
{
   bool **lut;
   uint16_t glyph_min;
   uint16_t glyph_max;
} bitmapfont_lut_t;

/* Generates a boolean LUT:
 *   lut[num_glyphs][glyph_width * glyph_height]
 * LUT value is 'true' if glyph pixel has a
 * non-zero value.
 * Returned object must be freed using
 * bitmapfont_free_lut().
 * Returns NULL in the event of an error. */
bitmapfont_lut_t *bitmapfont_get_lut(void);

void bitmapfont_free_lut(bitmapfont_lut_t *font);

#endif